{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates the appropriate resources that are required by the EC2 instance (qs-1o61c3c8o)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon VPC Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "SubnetID",
                        "RDPFrom"
                    ]
                }
            ],
            "ParameterLabels": {
                "RDPFrom": {
                    "default": "RDP from"
                },
                "SubnetID": {
                    "default": "Subnet ID"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "RDPFrom": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]|3[0-2]))$",
            "ConstraintDescription": "Must not be empty, must be valid IPv4 address with valid Mask Bit from 1-32, format of x.x.x.x/x",
            "Description": "Lockdown RDP access to EC2 instance from valid IPv4 address, e.g. 201.0.1.3/19",
            "Type": "String"
        },
        "SubnetID": {
            "Description": "Subnet ID, must be same CIDR that was supplied when ElasticSearch was deployed",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of your existing VPC for deployment",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Resources": {
        "WebPortAddress": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "AssociateWebPort": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "WebPortAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "WebXface"
                }
            }
        },
        "WebXface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetID"
                },
                "Description": "Interface for web traffic",
                "GroupSet": [
                    {
                        "Ref": "WebSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true"
            }
        },
        "WebSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Enable HTTP access via user defined port",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "RDPFrom"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "ElasticIp": {
            "Value": {
                "Ref": "WebPortAddress"
            }
        },
        "WebXFace": {
            "Value": {
                "Ref": "WebXface"
            }
        },
        "PrivateIp": {
            "Value": {
                "Fn::GetAtt": [
                    "WebXface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        }
    }
}

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates an EC2 instance, an MSSQL Express Edition RDS instance and an S3 Bucket (qs-1o61c3c8t)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyName",
                        "InstanceType",
                        "VPCID",
                        "SubnetID",
                        "ElasticIp",
                        "WebXface",
                        "RDPFrom"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS Configuration"
                    },
                    "Parameters": [
                        "DBAdminUser",
                        "DBAdminPassword",
                        "DBEvaluateUser",
                        "DBEvaluatePassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon S3 Configuration"
                    },
                    "Parameters": [
                        "S3EvaluateBucket"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Active Directory Configuration"
                    },
                    "Parameters": [
                        "DomainDNSName",
                        "DomainIPs",
                        "DomainAdminUser",
                        "DomainAdminPassword",
                        "DomainNetBiosName"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Connect Configuration"
                    },
                    "Parameters": [
                        "S3Bucket"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon ElasticSearch Configuration"
                    },
                    "Parameters": [
                        "ESDomain"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "DBAdminPassword": {
                    "default": "DB Admin Password"
                },
                "DBAdminUser": {
                    "default": "DB Admin User"
                },
                "DBEvaluatePassword": {
                    "default": "DB Evaluate Password"
                },
                "DBEvaluateUser": {
                    "default": "DB Evaluate User"
                },
                "DomainAdminPassword": {
                    "default": "Domain Admin Password"
                },
                "DomainAdminUser": {
                    "default": "Domain Admin User"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "DomainIPs": {
                    "default": "Domain IPs"
                },
                "DomainNetBiosName": {
                    "default": "Domain NetBios Name"
                },
                "ElasticIp": {
                    "default": "Elastic IP"
                },
                "ESDomain": {
                    "default": "ES Domain"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "KeyName": {
                    "default": "Key Name"
                },
                "QSS3BucketName": {
                    "default": "QS S3 BucketName"
                },
                "QSS3KeyPrefix": {
                    "default": "QS S3 Key Prefix"
                },
                "RDPFrom": {
                    "default": "RDP From"
                },
                "S3Bucket": {
                    "default": "S3 Bucket"
                },
                "S3EvaluateBucket": {
                    "default": "S3 Evaluate Bucket"
                },
                "SubnetID": {
                    "default": "Subnet ID"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "WebXface": {
                    "default": "Web Interface"
                }
            }
        }
    },
    "Parameters": {
        "DBAdminPassword": {
            "AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!.*[@/\"',]).*$",
            "ConstraintDescription": "Password does not meet complexity requirements",
            "Description": "Password must contain 8 to 64 printable ASCII characters excluding /, \", ', \\, , and @. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBAdminUser": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "NoEcho": "false",
            "Type": "String"
        },
        "DBEvaluatePassword": {
            "AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!.*[@/\"',]).*$",
            "ConstraintDescription": " Password does not meet complexity requirements",
            "Description": "Password must contain 8 to 64 printable ASCII characters excluding /, \", ', \\, , and @. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBEvaluateUser": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters",
            "Description": "The database non-admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "NoEcho": "false",
            "Type": "String"
        },
        "DomainAdminPassword": {
            "Description": "Password of the Domain Administrator's account. This is separate from the default \"EC2 Administrator\" account",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"EC2 Administrator\" account",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63}\\.?$)",
            "ConstraintDescription": "Must not be empty, allowed ASCII letters, case insensitive, digits, hyphens ('-'), labels, cannot start or end with a hyphen, trailings dots are allowed, labels can start with numbers, max length of hostname is 253 characters, underscores are not allowed",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
            "MaxLength": "253",
            "Type": "String"
        },
        "DomainIPs": {
            "AllowedPattern": "^(2[0-4]\\d|25[0-5]|1?\\d?\\d)(?:\\.(1?[0-9]{1,2})){3},(2[0-4]\\d|25[0-5]|1?\\d?\\d)(?:\\.(1?[0-9]{1,2})){3}$",
            "ConstraintDescription": "Must be 2 valid IPv4 addresses separated by a ',' with no white spaces. e.g. 11.0.2.10,11.0.3.10",
            "Description": "A comma separated list of DNS IP addresses for the AD Domain",
            "NoEcho": "false",
            "Type": "String"
        },
        "DomainNetBiosName": {
            "Description": "Netbios name for the domain, e.g. MYCOMPANY",
            "Type": "String"
        },
        "ESDomain": {
            "Type": "String",
            "Description": "This is the name for the ElasticSearch Domain"
        },
        "ElasticIp": {
            "Type": "String",
            "Description": "Elastic IP of EC2 Instance"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.medium",  
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "m4.large",
            "Description": "Amazon EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair",
            "Description": "Name of an existing EC2 KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)",
            "Default": "connect/integration/qualtrak/evaluate/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)",
            "Type": "String"
        },
        "RDPFrom": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]|3[0-2]))$",
            "ConstraintDescription": "Must not be empty, must be valid IPv4 address with valid Mask Bit from 1-32, format of x.x.x.x/x",
            "Description": "Lockdown RDP access to EC2 instance from valid IPv4 address, e.g. 201.0.1.3/19",
            "Type": "String"
        },
        "S3Bucket": {
            "AllowedPattern": "^[a-z0-9]+([0-9a-zA-Z-.]*[0-9a-z])*$",
            "ConstraintDescription": "Must not be empty, must begin with a letter or number and contain only alphanumeric, lowercase characters, must not end with . or -, no longer than 63 characters in length",
            "Description": "Amazon Connect Data Streaming S3 Bucket",
            "MaxLength": "63",
            "MinLength": "3",
            "Type": "String"
        },
        "S3EvaluateBucket": {
            "AllowedPattern": "^[a-z0-9]+([0-9a-zA-Z-.]*[0-9a-z])*$",
            "ConstraintDescription": "Must not be empty, must begin with a letter or number and contain only alphanumeric, lowercase characters, must not end with . or -, no longer than 41 characters in length",
            "Description": "The name of a new bucket that will be used to store Attachments. The actual name will be evaluate-<AccountId>-<whatever-you-enter-here>, e.g. evaluate-344201342714-my.new.bucket",
            "MaxLength": "41",
            "MinLength": "3",
            "Type": "String"
        },
        "SubnetID": {
            "Description": "Subnet ID, must be same CIDR that was supplied when ElasticSearch was deployed",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of your existing VPC for deployment",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WebXface": {
            "Type": "String",
            "Description": "Interface for web traffic"
        }
    },
    "Rules": {
        "RegionSupport": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "AWS::Region"
                            },
                            "us-east-1"
                        ]
                    },
                    "AssertDescription": "Region must be US East (N. Virginia) - us-east-1"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "us-east-1": {
                "WS2016R2V1": "ami-73fd2d09"
            },
            "eu-central-1": {
                "WS2016R2V1": "ami-10e45d7f"
            },
            "ap-southeast-2": {
                "WS2016R2V1": "ami-c503eea7"
            }
        }
    },
    "Resources": {
        "SqlExpress": {
            "Type": "AWS::RDS::DBInstance",
            "DeletionPolicy": "Snapshot",
            "Properties": {
                "AllocatedStorage": "100",
                "DBInstanceClass": "db.t2.medium",
                "Engine": "sqlserver-ex",
                "EngineVersion" : "13.00.4466.4.v1",
                "Iops": "1000",
                "MasterUsername": {
                    "Ref": "DBAdminUser"
                },
                "MasterUserPassword": {
                    "Ref": "DBAdminPassword"
                },
                "BackupRetentionPeriod": "0"
            }
        },
        "RootRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "root-${AWS::AccountId}-${AWS::StackName}-${AWS::Region}"
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "s3:ListBucket",
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:s3:::${S3BucketNameEvaluate}"
                                        },
                                        {
                                            "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:DeleteObject",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:s3:::${S3BucketNameEvaluate}/*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:s3:::${S3Bucket}/*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "es:DescribeElasticsearchDomain",
                                        "es:DescribeElasticsearchDomainConfig",
                                        "es:ESHttpGet",
                                        "es:ESHttpHead",
                                        "es:ListTags"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ESDomain}/*"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RootInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RootRole"
                    }
                ]
            }
        },
        "WindowsServer": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            " -r WindowsServer",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\install-environment-variables.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install-environment-variables.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\install-join-ad.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install-join-ad.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "5-install-environment-variables": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\install-environment-variables.ps1 ",
                                            " -bucket ",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            " -attachmentBucket ",
                                            {
                                                "Ref": "S3BucketNameEvaluate"
                                            },
                                            " -dns ",
                                            {
                                                "Ref": "ElasticIp"
                                            },
                                            " -dbAdminUser ",
                                            {
                                                "Ref": "DBAdminUser"
                                            },
                                            " -dbAdminPassword ",
                                            {
                                                "Ref": "DBAdminPassword"
                                            },
                                            " -dbUser ",
                                            {
                                                "Ref": "DBEvaluateUser"
                                            },
                                            " -dbUserPassword ",
                                            {
                                                "Ref": "DBEvaluatePassword"
                                            },
                                            " -dbDns ",
                                            {
                                                "Fn::GetAtt": [
                                                    "SqlExpress",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            " -dbPort ",
                                            {
                                                "Fn::GetAtt": [
                                                    "SqlExpress",
                                                    "Endpoint.Port"
                                                ]
                                            },
                                            " -accountId ",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            " -region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -adDomain ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -esUrl ",
                                            {
                                                "Ref": "ESDomain"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "6-install-firewall-rules": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\install-firewall-rules.ps1 \n",
                                "waitAfterCompletion": "0"
                            },
                            "7-install-create-group": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\install-group.ps1 \n",
                                "waitAfterCompletion": "0"
                            },
                            "8-install-database": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\install-database.ps1 \n",
                                "waitAfterCompletion": "5"
                            },
                            "9-install-join-ad": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\install-join-ad.ps1",
                                            " -ip1 ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "DomainIPs"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            " -ip2 ",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "DomainIPs"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            " -adDomain ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -adAdminUser ",
                                            {
                                                "Ref": "DomainNetBiosName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            " -adAdminPassword ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "10-signal-success": {
                                "command": {
                                    "Fn::Sub": "cfn-signal.exe -e 0 --stack ${AWS::StackName} --resource WindowsServer --region ${AWS::Region}"
                                }
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "RootInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2016R2V1"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script> \n",
                                "cfn-init.exe -v -s ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " -r WindowsServer ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script> \n"
                            ]
                        ]
                    }
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "WebXface"
                        },
                        "DeviceIndex": "0"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT30M"
                }
            }
        },
        "S3BucketNameEvaluate": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AccessControl": "BucketOwnerFullControl",
                "BucketName": {
                    "Fn::Sub": "evaluate-${AWS::AccountId}-${S3EvaluateBucket}"
                }
            }
        }
    },
    "Outputs": {
        "PrivateIp": {
            "Description": "Private Ip Address",
            "Value": {
                "Fn::GetAtt": [
                    "WindowsServer",
                    "PrivateIp"
                ]
            }
        },
        "PublicIp": {
            "Description": "Public Ip Address",
            "Value": {
                "Fn::GetAtt": [
                    "WindowsServer",
                    "PublicIp"
                ]
            }
        },
        "EvaluateUrl": {
            "Description": "Url for Evaluate for Amazon Connect web application (Active Directory)",
            "Value": {
                "Fn::Sub": "${WindowsServer.PublicDnsName}/evaluate"
            }
        },
        "TlmUrl": {
            "Description": "Url for Tenant Management System web application (Windows Authentication)",
            "Value": {
                "Fn::Sub": "${WindowsServer.PublicDnsName}/tlm"
            }
        },
        "ClusterStatusUrl": {
            "Description": "Url for Cluster Status web application (Windows Authentication)",
            "Value": {
                "Fn::Sub": "${WindowsServer.PublicDnsName}/status"
            }
        }
    }
}
